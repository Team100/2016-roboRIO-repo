// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc100.testEncoder;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Talon;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
	public static Encoder encoderR; 
	public static Encoder encoderL;
	public static SpeedController right;
	public static SpeedController left; 
	public static RobotDrive driveTrainTwoMotorDrive;
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
   //public static SpeedController andyMarkencoderMotor;
 

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
       // andyMarkencoderMotor = new Talon(3);
        right = new Talon(1);
        left = new Talon(0);
        encoderR = new Encoder(1,2);
        encoderL = new Encoder(0,3);
        driveTrainTwoMotorDrive = new RobotDrive(left, right);
        driveTrainTwoMotorDrive.setSafetyEnabled(true);
        driveTrainTwoMotorDrive.setExpiration( 0.1);
        driveTrainTwoMotorDrive.setSensitivity(2);
        driveTrainTwoMotorDrive.setMaxOutput(1.0);
        driveTrainTwoMotorDrive.setInvertedMotor(RobotDrive.MotorType.kRearLeft, true);
        
      //  LiveWindow.addActuator("AndyMark", "encoderMotor", (Talon) andyMarkencoderMotor);
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
