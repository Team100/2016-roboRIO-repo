// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc0.MyRobot;

import org.usfirst.frc0.MyRobot.commands.UpOne;

import com.ctre.phoenix.motorcontrol.ControlMode;
import com.ctre.phoenix.motorcontrol.FeedbackDevice;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;
import edu.wpi.first.wpilibj.CounterBase.EncodingType;
import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.PIDSourceType;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static WPI_TalonSRX pIDDriveTrainTalonSRX1;
    public static WPI_TalonSRX pIDDriveTrainTalonSRX2;
    public static DifferentialDrive pIDDriveTrainDifferentialDrive1;
    public static Encoder pIDDriveTrainQuadEncoder;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        pIDDriveTrainTalonSRX1 = new WPI_TalonSRX(1);
        pIDDriveTrainTalonSRX1.setSelectedSensorPosition(0, 0, 0);
        
        pIDDriveTrainTalonSRX2 = new WPI_TalonSRX(2);
        
        
        pIDDriveTrainDifferentialDrive1 = new DifferentialDrive(pIDDriveTrainTalonSRX1, pIDDriveTrainTalonSRX2);
        //LiveWindow.addActuator("PIDDriveTrain", "Differential Drive 1", pIDDriveTrainDifferentialDrive1);
        pIDDriveTrainDifferentialDrive1.setSafetyEnabled(true);
        pIDDriveTrainDifferentialDrive1.setExpiration(0.1);
        pIDDriveTrainDifferentialDrive1.setMaxOutput(1.0);
        pIDDriveTrainTalonSRX1.configSelectedFeedbackSensor(FeedbackDevice.QuadEncoder, 0, 0);
        pIDDriveTrainTalonSRX1.setSensorPhase(true);

        
        pIDDriveTrainQuadEncoder = new Encoder(1, 2, true, EncodingType.k4X);
        //LiveWindow.addSensor("PIDDriveTrain", "QuadEncoder", pIDDriveTrainQuadEncoder);
        pIDDriveTrainQuadEncoder.setDistancePerPulse(1.0);
        pIDDriveTrainQuadEncoder.setPIDSourceType(PIDSourceType.kRate);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
