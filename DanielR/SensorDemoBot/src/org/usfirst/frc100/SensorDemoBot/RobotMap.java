// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc100.SensorDemoBot;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.AnalogInput;
import edu.wpi.first.wpilibj.AnalogPotentiometer;
import edu.wpi.first.wpilibj.CounterBase.EncodingType;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.PIDSourceType;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static AnalogPotentiometer sensorsPotentiometer;
    public static DigitalInput sensorsLimitSwitch;
    public static Encoder sensorsEncoder;
    public static AnalogInput sensorsUltrasonic;
    public static AnalogInput sensorsSonar;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        sensorsPotentiometer = new AnalogPotentiometer(1, 1.0, 0.0);
        LiveWindow.addSensor("Sensors", "Potentiometer", sensorsPotentiometer);
        
        sensorsLimitSwitch = new DigitalInput(0);
        LiveWindow.addSensor("Sensors", "Limit Switch", sensorsLimitSwitch);
        
        sensorsEncoder = new Encoder(8, 9, false, EncodingType.k4X);
        LiveWindow.addSensor("Sensors", "Encoder", sensorsEncoder);
        sensorsEncoder.setDistancePerPulse(1.0);
        sensorsEncoder.setPIDSourceType(PIDSourceType.kRate);
        sensorsUltrasonic = new AnalogInput(0);
        LiveWindow.addSensor("Sensors", "Ultrasonic", sensorsUltrasonic);
        sensorsSonar = new AnalogInput(2);
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
